// <auto-generated />
using System;
using Game_Unity.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Game_Unity.Migrations.SoilQuality
{
    [DbContext(typeof(SoilQualityContext))]
    partial class SoilQualityContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Game_Unity.Models.SoilQualityModel", b =>
                {
                    b.Property<int>("SoilQualityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoilQualityId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NutrientLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PH")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TypeSoilQuality")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SoilQualityId");

                    b.ToTable("SoilQualitys");
                });
#pragma warning restore 612, 618
        }
    }
}
